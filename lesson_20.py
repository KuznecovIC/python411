"""
19.01.2025
Тема: ООП Ч5. Наследование. Множественное. Иерархическое. MRO. Урок: 20
- Взаимозависимость классов
- Вызов метода наследника через родителя
- Пример иерархического наследования с вызовом инициализаторов предков и передачей атрибутов
- Пример иерархического наследования с вызовом инициализаторов предков и передачей атрибутов через словарь и **kwargs
- Множественное наследование
- MRO - method resolution order - порядок разрешения методов
"""

# Цепочка наследования A - B - C
# Альтернативный вариант
# Много минусов. Потому что сложно отследить типы данных, сами данные и т.п.


class A:
    def __init__(self):
        print("Инициализатор класса A")

    def method_a(self):
        print("Метод А")


class B:
    def __init__(self):
        print("Инициализатор класса B")

    def method_a(self):
        print("Метод A в классе B")


class C(B, A):
    pass


c = C()
c.method_a()
# Какой метод будет вызван?
# Ответ: метод из класса B
# mro() - как пайтон будет искать методы?

print(C.mro())
# [<class '__main__.C'>, <class '__main__.B'>, <class '__main__.A'>, <class 'object'>]



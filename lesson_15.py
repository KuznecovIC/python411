"""
Урок 15
22.12.2024

Python: Работа с форматами данных JSON, CSV, YAML. Урок: 15

1. Формат JSON:
    - Структура и синтаксис JSON
    - Методы json.dumps() и json.loads()
    - Работа с json.dump() и json.load()
    - Обработка сложных структур данных
    
2. Работа с CSV файлами:
    - Структура CSV формата
    - Модуль csv
    - Чтение CSV через csv.reader()
    - Запись в CSV через csv.writer()
    - Работа с csv.DictReader и csv.DictWriter
    
3. Формат YAML:
    - Особенности синтаксиса YAML
    - Установка и использование PyYAML
    - Методы yaml.safe_load() и yaml.dump()
    - Конвертация между форматами
    
4. Практическое применение:
    - Сохранение конфигураций приложения
    - Работа с табличными данными
    - Парсинг внешних источников данных
    - Конвертация между форматами

Практика:
- Создание конфигурационного файла в YAML
- Обработка данных из CSV файла
- Сериализация объектов в JSON
- Конвертер данных между форматами
"""

# JSONN (JavaScript Object Notation)
# JSON - это текстовый формат данных, который используется для представления структурных данных.
# JSON поддерживает следующие типы данных:
# - строки
# - числа
# - логические значения (true, false)
# - массивы
# - объекты
# - null

# Python имеет встроенный модуль json, который позволяет работать с JSON данными.
# Модуль json предоставляет следующие функции:
# - json.dumps() - преобразует объект Python в строку JSON
# - json.loads() - преобразует строку JSON в объект Python
# - json.dump() - записывает объект Python в файл в формате JSON
# - json.load() - читает объект Python из файла в формате JSON


import json
